Metadata-Version: 2.4
Name: fangs-unfolding
Version: 0.0.1.dev0
Summary: Forward, Adjoint, and Neutron Noise General Solver with Unfolding Capabilities
Author-email: Harun Ardiansyah <harunardi13@gmail.com>
Maintainer-email: Harun Ardiansyah <harunardi13@gmail.com>
License-Expression: BSD-3-Clause
Project-URL: Repository, https://github.com/harunardi/FANGS-UNFOLDING.git
Project-URL: Issues, https://github.com/harunardi/FANGS-UNFOLDING/issues/new
Keywords: neutron,noise,unfolding,forward,adjoint
Classifier: Development Status :: 3 - Alpha
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: contourpy>=1.3.3
Requires-Dist: h5py>=3.14.0
Requires-Dist: matplotlib>=3.10.5
Requires-Dist: munkres>=1.1.4
Requires-Dist: numpy>=2.3.2
Requires-Dist: packaging>=25.0
Requires-Dist: petsc4py>=3.23.4
Requires-Dist: pillow>=11.3.0
Requires-Dist: pip>=25.2
Requires-Dist: PySide6>=6.9.1
Requires-Dist: scipy>=1.16.0
Provides-Extra: docs
Requires-Dist: mkdocs-material; extra == "docs"
Dynamic: license-file

# General Overview
FANGS-UNFOLD (Forward, Adjoint, and Neutron Noise General Solver with Unfolding Capabilities) is a tool to perform forward, adjoint, and neutron noise equations. The tool uses multigroup neutron diffusion equation for the basis of energy and angular discretization. It uses box-scheme finite difference for the spatial discretization. This is part of Harun Ardiansyah's dissertation thesis work.

## How to run the code:
- Go to SRC folder
- For standard forward, adjoint, or noise simulation, use MAIN.py
- To run transfer functions simulation, use TRANSFER_FUNCTION.py
- To run unfolding method, use UNFOLDING_{geom_type}.py
  - geom_type is geometry option: 1D, 2D rectangular grid, 2D hexagonal grid, 3D rectangular grid (coming soon), 3D hexagonal grid (coming soon)

## LIST OF TEST

### 1D Rectangular
- TEST01: 1D 1-group homogeneous test, Forward
- TEST02: CORE SIM+ Test 03, 1D 2-group, Forward, Noise
- TEST03: CORE SIM+ Test 05, 1D 2-group, Forward, Noise
- TEST04: CORE SIM+ Test 07, 1D 2-group, Adjoint

### 2D Rectangular
- TEST05: Serpent 17x17 nodes, 2D 2-group, Forward
- TEST06: CORE SIM+ Test 10, 2D 2-group, Forward, Noise
- TEST07: CORE SIM+ C3 Benchmark, 2D 2-group, Forward, Adjoint, Noise
- TEST08: BIBLIS Benchmark, 2D 2-group, Forward, Adjoint
- TEST09: PWR/MOX Benchmark, 2D 2-group, Forward, Adjoint, Noise

### 3D Rectangular
- TEST10: CORE SIM+ Test 02, 3D 2-group, Forward, Adjoint
- TEST11: CORE SIM+ Test 08, 3D 2-group, Forward
- TEST12: CORE SIM+ Test 09, 3D 2-group, Forward
- TEST13: PWR/MOX Benchmark, 3D 2-group, Forward, Adjoint, Noise
- TEST14: CORE SIM+ Test 14, 3D 2-group, Forward, Adjoint

### 2D Hexagonal
- TEST15: Serpent 3 rings, Forward
- TEST16: Homogeneous Hexagonal Reactor, 2D 2-group, Forward, Adjoint
- TEST17: VVER-440, 2D 2-group, Forward, Adjoint
- TEST18: HTTR, 2D 2-group, Forward, Noise, Adjoint
- TEST19: HTTR, 2D 4-group, Forward
- TEST20: HTTR, 2D 7-group, Forward
- TEST21: HTTR, 2D 14-group, Forward

### 3D Hexagonal
- TEST22: Serpent 3 rings, Forward
- TEST23: VVER-440, 3D 2-group, Forward, Adjoint
- TEST24: HTTR, 3D 2-group, Forward, Noise, Adjoint

### 2D Transfer Function (for space dependences of neutron noise)
- TEST01: CORE SIM+ C3 Benchmark, 2D 2-group, Forward, Noise, Adjoint, Power Perturbations
- TEST02: PWR/MOX Benchmark, 2D 2-group, Forward, Noise, Adjoint, Power Perturbations
- TEST03: HTTR, 2D 2-group, Forward, Noise, Adjoint, Power Perturbations

### Rectangular Noise Models
- TEST04: CORE SIM+ C3 Benchmark AVS, 3D 2-group, Noise Center/Non-center, Absorber of Variable Strength (AVS)
- TEST05: BIBLIS Benchmark AVS, 2D 2-group, Noise Non-center, Absorber of Variable Strength (AVS)
- TEST06: BIBLIS Benchmark FAV, 2D 2-group, Noise Non-center, Fuel Assembly Vibration (FAV)
- TEST07: PWR/MOX Benchmark AVS, 2D 2-group, Noise Non-center, Absorber of Variable Strength (AVS)
- TEST08: PWR/MOX Benchmark AVS/TV, 3D 2-group, Noise Non-center, Absorber of Variable Strength (AVS) and Travelling Vibration
- TEST09: PWR/MOX Benchmark FAV, 2D 2-group, Noise Non-center, Fuel Assembly Vibration (FAV)

### Hexagonal Noise Models
- TEST10: HTTR AVS, 2D 2-group, Noise Center/Non-center, Absorber of Variable Strength (AVS)
- TEST11: HTTR AVS/TV, 3D 2-group, Noise Center/Non-center, Absorber of Variable Strength (AVS) and Travelling Vibration
- TEST12: HTTR FAV, 2D 2-group, Noise Center/Non-center, Fuel Assembly Vibration (FAV)

## Required Libraries
    numpy >= 3.10
    h5py
    matplotlib
    petsc4py
    scipy

  It should be noted that the user must the PETSc that can handle complex numbers. The following is recommended:
    
    conda install -c conda-forge 'petsc=*=complex*' petsc4py


## Note:
    conda create --name noise numpy scipy h5py matplotlib petsc4py -c conda-forge && conda activate noise && conda install -c conda-forge 'petsc=*=complex*' petsc4py
